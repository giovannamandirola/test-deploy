name: Build and deploy an app to AKS with Kompose

on:
  push:
    branches: ["dev"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "taiscontainerregistry"
  CONTAINER_NAME: "test"
  RESOURCE_GROUP: "myResourceGroup"
  CLUSTER_NAME: "myAKSCluster"
  DOCKER_COMPOSE_FILE_PATH: "docker-compose.yml"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up environment variables from GitHub Secrets
      - name: Set environment variables
        run: |
          echo "DB_NAME=${{ vars.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ vars.DB_PORT }}" >> $GITHUB_ENV
          echo "DB_LOCAL_PORT=${{ vars.DB_LOCAL_PORT }}" >> $GITHUB_ENV
          echo "APP_PORT=${{ vars.APP_PORT }}" >> $GITHUB_ENV
        # Add more environment variables as needed

      # Step 3: Install Kompose
      - name: Install Kompose
        run: |
          curl -L https://github.com/kubernetes/kompose/releases/download/v1.26.1/kompose-linux-amd64 -o kompose
          chmod +x kompose
          sudo mv kompose /usr/local/bin/kompose

      # Step 4: Convert Docker Compose to Kubernetes manifests
      - name: Convert Docker Compose to Kubernetes
        run: |
          kompose convert

      # Step 5: Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 6: Set up kubectl for AKS
      - name: Set up kubectl
        run: |
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }}

      # Step 7: Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl apply -f ./
